{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-07T10:00:58.247Z",
    "end": "2023-11-07T10:00:59.267Z",
    "duration": 1020,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "07bed4a8-5e21-4616-9cc3-bf9bc765ce3b",
      "title": "",
      "fullFile": "cypress\\api_test_scripts\\TC_004_PUT_request.js",
      "file": "cypress\\api_test_scripts\\TC_004_PUT_request.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "812b07e8-65de-4946-90ff-00d44e0defc3",
          "title": "Test PUT request",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be able to send PUT request and verify the response",
              "fullTitle": "Test PUT request should be able to send PUT request and verify the response",
              "timedOut": null,
              "duration": 903,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let url = 'https://jsonplaceholder.typicode.com/posts/1';\nlet header = {\n  'Content-type': 'application/json; charset=UTF-8'\n};\nlet reqBody = {\n  id: 1,\n  title: 'foo',\n  body: 'bar',\n  userId: 1\n};\nlet requestObject = {\n  url: url,\n  method: 'PUT',\n  body: reqBody,\n  headers: header\n};\ncy.request(requestObject).then(res => {\n  let {\n    status,\n    body\n  } = res;\n  // cy.log(JSON.stringify(res.body))\n  let {\n    title,\n    userId,\n    id\n  } = body;\n  let responseBody = body.body;\n  // Verification\n  expect(status).to.eq(200, 'verifying Response header');\n  expect(id).to.eq(reqBody.id, 'verifying id');\n  expect(userId).to.eq(reqBody.userId, 'verifying userid');\n  expect(title).to.eq(reqBody.title, 'verifying title');\n  expect(responseBody).to.eq(reqBody.body, 'verifying body');\n});",
              "err": {},
              "uuid": "dbeedae5-6bcd-4bcb-97d8-283e0f4e08fa",
              "parentUUID": "812b07e8-65de-4946-90ff-00d44e0defc3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dbeedae5-6bcd-4bcb-97d8-283e0f4e08fa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 903,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}